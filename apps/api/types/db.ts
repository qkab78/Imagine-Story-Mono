/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AccessTokens {
  abilities: string;
  created_at: Timestamp;
  expires_at: Timestamp | null;
  hash: string;
  id: number;
  last_used_at: Timestamp | null;
  name: string;
  tokenable_id: string;
  type: string;
  updated_at: Timestamp;
}

export interface AdonisSchema {
  batch: number;
  id: Generated<number>;
  migration_time: Generated<Timestamp | null>;
  name: string;
}

export interface AdonisSchemaVersions {
  version: number;
}

export interface Stories {
  chapters: number;
  characters: string | null;
  content: string;
  cover: string;
  created_at: Timestamp | null;
  id: Generated<string>;
  images: string | null;
  synopsis: string | null;
  title: string;
  updated_at: Timestamp | null;
}

export interface Users {
  created_at: Timestamp;
  email: string;
  firstname: string;
  id: Generated<string>;
  lastname: string;
  password: string | null;
  role: Generated<string>;
  updated_at: Timestamp;
}

export interface DB {
  access_tokens: AccessTokens;
  adonis_schema: AdonisSchema;
  adonis_schema_versions: AdonisSchemaVersions;
  stories: Stories;
  users: Users;
}
