/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AccessTokens {
  abilities: string;
  created_at: Timestamp;
  expires_at: Timestamp | null;
  hash: string;
  id: Generated<string>;
  last_used_at: Timestamp | null;
  name: string;
  tokenable_id: string;
  type: string;
  updated_at: Timestamp;
}

export interface Characters {
  background_story: string | null;
  character_image: string | null;
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<string>;
  name: string;
  personality_traits: Json | null;
  physical_appearance: Json | null;
  role: string;
  story_id: string;
  updated_at: Generated<Timestamp>;
}

export interface Stories {
  chapter_images: Generated<Json | null>;
  chapters: number;
  child_age: Generated<number>;
  conclusion: Generated<string>;
  content: string;
  cover_image: string;
  created_at: Timestamp;
  id: Generated<string>;
  language: Generated<string>;
  protagonist: Generated<string>;
  public: Generated<boolean>;
  slug: string | null;
  species: Generated<string>;
  story_chapters: Generated<Json>;
  synopsis: string;
  theme: Generated<string>;
  title: string;
  tone: Generated<string>;
  updated_at: Timestamp;
  user_id: string;
}

export interface Users {
  created_at: Timestamp;
  customer_id: string | null;
  email: string;
  firstname: string;
  id: Generated<string>;
  lastname: string;
  password: string | null;
  role: Generated<number>;
  updated_at: Timestamp;
}

export interface DB {
  access_tokens: AccessTokens;
  characters: Characters;
  stories: Stories;
  users: Users;
}
